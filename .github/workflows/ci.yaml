name: CI

on:
  workflow_dispatch:

jobs:
  start:
    name: CI pipeline start
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run sample script
        run: echo Started CI pipeline

#  lint:
#    name: Lint check
#    needs: [start]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: '17'
#
#      - name: Cache Gradle
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle-
#
#      - name: Make Gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run lint
#        run: ./gradlew lint
#
#      - name: Upload Lint check report
#        uses: actions/upload-artifact@v2
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    name: Unit Testing
#    needs: [lint]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: '17'
#
#      - name: Cache Gradle
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle-
#
#      - name: Make Gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run unit tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v2
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/
#
#  instrumentation-test:
#    name: Instrumentation Testing
#    needs: [unit-test]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Final Message
#        run: echo Instrumentation testing ended...
#
#  static-code-analysis:
#    name: Static Code Analysis
#    needs: [instrumentation-test]
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: '17'
#
#      - name: Cache Gradle
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle-
#
#      - name: Make Gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run static code analysis
#        run: ./gradlew ktlintCheck --console=plain || echo Next job continues...

  apk:
    name: Build Release signed APK
    needs: [start]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Upload Signed APK
        uses: actions/upload-artifact@v2
        with:
          name: rexroot-app-signed
          path: app/build/outputs/apk/release/*.apk